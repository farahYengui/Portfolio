{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ProjectsComponent = class ProjectsComponent {\n  constructor(renderer, el) {\n    this.renderer = renderer;\n    this.el = el;\n    this.slideIndex = 1;\n    this.slideIndex2 = 1;\n  }\n  // Next/previous controls for Slide 1\n  plusSlides(n) {\n    this.showSlides(this.slideIndex += n);\n  }\n  // Thumbnail image controls for Slide 1\n  currentSlide(n) {\n    this.showSlides(this.slideIndex = n);\n  }\n  // ShowSlides for Slide 1\n  showSlides(n) {\n    let i;\n    const slides = document.getElementsByClassName(\"mySlides\");\n    const dots = document.getElementsByClassName(\"dot\");\n    if (n > slides.length) {\n      this.slideIndex = 1;\n    }\n    if (n < 1) {\n      this.slideIndex = slides.length;\n    }\n    for (i = 0; i < slides.length; i++) {\n      if (slides[i]) slides[i].style.display = \"none\";\n    }\n    for (i = 0; i < dots.length; i++) {\n      dots[i].className = dots[i].className.replace(\" act\", \"\");\n    }\n    slides[this.slideIndex - 1].style.display = \"block\";\n    dots[this.slideIndex - 1].className += \" act\";\n  }\n  // Next/previous controls for Slide 2\n  plusSlides2(n) {\n    this.showSlides2(this.slideIndex2 += n);\n  }\n  // ShowSlides for Slide 2\n  showSlides2(n) {\n    let i;\n    const slides = document.getElementsByClassName(\"mySkill\");\n    if (n > slides.length) {\n      this.slideIndex2 = 1;\n    }\n    if (n < 1) {\n      this.slideIndex2 = slides.length;\n    }\n    for (i = 0; i < slides.length; i++) {\n      if (slides[i]) slides[i].style.display = \"none\";\n    }\n    if (slides[this.slideIndex2 - 1]) slides[this.slideIndex2 - 1].style.display = \"flex\";\n  }\n  ngOnInit() {\n    this.showSlides(this.slideIndex);\n    this.showSlides2(this.slideIndex2);\n  }\n};\nProjectsComponent = __decorate([Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.scss']\n})], ProjectsComponent);\nexport { ProjectsComponent };","map":{"version":3,"mappings":"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","names":["Component","ProjectsComponent","constructor","renderer","el","plusSlides","n","showSlides","slideIndex","currentSlide","i","slides","document","getElementsByClassName","dots","length","style","display","className","replace","plusSlides2","showSlides2","slideIndex2","ngOnInit","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\3gt\\tp web\\blog\\blog\\src\\app\\projects\\projects.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.scss']\n})\nexport class ProjectsComponent implements OnInit {\n  constructor(private renderer: Renderer2, private el: ElementRef) { }\n\n  private slideIndex: number = 1;\n  private slideIndex2: number = 1;\n // Next/previous controls for Slide 1\n  plusSlides(n: number): void {\n    this.showSlides(this.slideIndex += n);\n  }\n   // Thumbnail image controls for Slide 1\n   currentSlide(n: number): void {\n    this.showSlides(this.slideIndex = n);\n  }\n\n  // ShowSlides for Slide 1\n  private showSlides(n: number): void {\n    let i: number;\n    const slides: HTMLCollectionOf<Element> = document.getElementsByClassName(\"mySlides\");\n    const dots: HTMLCollectionOf<Element> = document.getElementsByClassName(\"dot\");\n\n    if (n > slides.length) { this.slideIndex = 1; }\n    if (n < 1) { this.slideIndex = slides.length; }\n\n    for (i = 0; i < slides.length; i++) {\n      if(slides[i])\n      (slides[i] as HTMLElement).style.display = \"none\";\n    }\n\n    for (i = 0; i < dots.length; i++) {\n      dots[i].className = dots[i].className.replace(\" act\", \"\");\n    }\n\n    (slides[this.slideIndex - 1] as HTMLElement).style.display = \"block\";\n    dots[this.slideIndex - 1].className += \" act\";\n  }\n\n  // Next/previous controls for Slide 2\n  plusSlides2(n: number): void {\n    this.showSlides2(this.slideIndex2 += n);\n  }\n\n  // ShowSlides for Slide 2\n  private showSlides2(n: number): void {\n    let i: number;\n    const slides: HTMLCollectionOf<Element> = document.getElementsByClassName(\"mySkill\");\n\n    if (n > slides.length) { this.slideIndex2 = 1; }\n    if (n < 1) { this.slideIndex2 = slides.length; }\n\n    for (i = 0; i < slides.length; i++) {\n      if(slides[i])\n      (slides[i] as HTMLElement).style.display = \"none\";\n    }\n    if(slides[this.slideIndex2 - 1])\n    (slides[this.slideIndex2 - 1] as HTMLElement).style.display = \"flex\";\n  }\n\n  ngOnInit(): void {\n    \n    this.showSlides(this.slideIndex);\n    this.showSlides2(this.slideIndex2);\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}